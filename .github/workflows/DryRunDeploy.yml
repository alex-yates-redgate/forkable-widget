name: Dry Run Deploy

on:
  workflow_dispatch:

jobs:
  dry_run_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Data Container
        id: createDc
        env:
          RGCLONE_API_ENDPOINT: ${{ secrets.RGCLONE_API_ENDPOINT }}
          RGCLONE_ACCESS_TOKEN: ${{ secrets.RGCLONE_ACCESS_TOKEN }}
        run: |
          # Setting up rgclone.exe
          RGCLONE_DOWNLOAD_URL="$RGCLONE_API_ENDPOINT/cloning-api/download/cli/linux-amd64"
          echo "Downloading and unzipping rgclone from $RGCLONE_DOWNLOAD_URL"
          curl -sS "$RGCLONE_DOWNLOAD_URL" | tar xz
          
          # Creating data container
          echo "Creating data container"
          BUILD_NUMBER="${{ github.run_number }}-${{ github.sha }}"
          output=$(./rgclone create data-container --image Widget --name "widget-dry-run-$BUILD_NUMBER" --lifetime 15m --output yaml)
          
          # Outputting JDBC for flyway
          dcJdbc=$(echo "$output" | grep -o 'jdbcconnectionstring: .*' | cut -d ' ' -f 2-)
          dbJdbc="${dcJdbc}databaseName=WidgetProduction"
          echo "jdbc=$dbJdbc" >> $GITHUB_ENV
      
      - name: Flyway Migrate
        run: |
          echo "Downloading and unzipping Flyway 10.8.1"
          curl -sS https://download.red-gate.com/maven/release/com/redgate/flyway/flyway-commandline/10.8.1/flyway-commandline-10.8.1-linux-x64.tar.gz | tar xz >/dev/null
          export PATH="$PWD/flyway-10.8.1:$PATH"
          echo "Running flyway migrate to target $jdbc"
          flyway migrate -url="$jdbc" -locations="filesystem:./migrations"
