name: Refresh Data Image

on:
  workflow_dispatch:

jobs:
  dry_run_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Update Config
        env:
          REPO: ${{ github.repository }}
          HASH: ${{ github.sha }}
          BRANCH: ${{ github.ref_name }}
          RUN_NUM: ${{ github.run_number }}
          DBPASSWORD: ${{ secrets.RGCLONE_DBPASSWORD }}
        run: |
          # Clean up 
          REPO_TAG=$(echo "${REPO}" | tr -c -s '[:alnum:][:blank:]' '_' | head -c -1)     # Replaces all non alphanumerics with "_" and removes trailing "_"
          HASH_TAG="$(echo "${HASH:0:8}")"                                                # The first 8 chars should be plenty
          BRANCH_TAG=$(echo "${BRANCH}" | tr -c -s '[:alnum:][:blank:]' '_' | head -c -1) # Replaces all non alphanumerics with "_" and removes trailing "_"
          RUN_NUM_TAG=$RUN_NUM                                                            # No cleanup required, but being consistent with var names anyway

          # Update the Widget.yml file with the correct tags
          sed -i "s/\[REPO\]/$REPO_TAG/g;" tdm/Widget.yml
          sed -i "s/\[GITHASH\]/$HASH_TAG/g" tdm/Widget.yml
          sed -i "s/\[BRANCH\]/$BRANCH_TAG/g" tdm/Widget.yml
          sed -i "s/\[GITHUBRUNNUM\]/$RUN_NUM_TAG/g" tdm/Widget.yml
          sed -i "s/\[DBPASSWORD\]/$DBPASSWORD/g" tdm/Widget.yml

      - name: Refresh Data Image
        id: createDc
        env:
          RGCLONE_API_ENDPOINT: ${{ secrets.RGCLONE_API_ENDPOINT }}
          RGCLONE_ACCESS_TOKEN: ${{ secrets.RGCLONE_ACCESS_TOKEN }}
          RG_ACCOUNT: ${{ secrets.REDGATE_ACCOUNT }}
          REPO_OWNER: ${{ github.repository_owner }}
        run: |
          IMAGE_NAME="Widget-$REPO_OWNER"

          echo "Downloading and unzipping rgclone..."
          RGCLONE_DOWNLOAD_URL="${RGCLONE_API_ENDPOINT}cloning-api/download/cli/linux-amd64"
          curl -sS "$RGCLONE_DOWNLOAD_URL" | tar xz

          echo "Creating ${IMAGE_NAME}_New data image"
          ./rgclone create di -f ./tdm/Widget.yml --name "${IMAGE_NAME}_New"
          
          echo "Renaming $IMAGE_NAME data image to ${IMAGE_NAME}_Previous"
          ./rgclone update di $IMAGE_NAME --name "${IMAGE_NAME}_Previous"
          
          echo "Renaming ${IMAGE_NAME}_New data image to $IMAGE_NAME"
          ./rgclone update di "${IMAGE_NAME}_New" --name $IMAGE_NAME

          echo "Updating ${IMAGE_NAME}_Previous lifetime to 2 hours"
          ./rgclone update di "${IMAGE_NAME}_Previous" --lifetime 2h

          echo "Sharing $IMAGE_NAME with designated user(s)"
          ./rgclone update di $IMAGE_NAME --user $RG_ACCOUNT
      
